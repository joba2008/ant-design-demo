//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MCSUI.MCSWebServiceReference
{


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "MCSWebServiceReference.MCSWebServiceSoap")]
    public interface MCSWebServiceSoap
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/HelloWorld", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        string HelloWorld(string name);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAllRackType", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetAllRackType(ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAllEqpID", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetAllEqpID(string strEqpType, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/CheckFoupExistOrNot", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet CheckFoupExistOrNot(string strEqpType, string strEqpName, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/QueryAllEquipmentBasicStatus", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet QueryAllEquipmentBasicStatus(ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/QueryLocationBaseOnFOUPID", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet QueryLocationBaseOnFOUPID(string equipmentid, string equipmenttype, string foupid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/QueryLocationBaseOnFOUPIDWithoutEquipmentIDAndType", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet QueryLocationBaseOnFOUPIDWithoutEquipmentIDAndType(string foupid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/QueryEquipmentBaseOnTypeAndSubtype", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet QueryEquipmentBaseOnTypeAndSubtype(string type, string subtype, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InsertERackDataToRackBasicInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool InsertERackDataToRackBasicInfo(string name, string type, string subtype, string capacity, string hsmsip, string hsmsport, string hsmsdevice, string createuser, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InsertStockerDataToRackBasicInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool InsertStockerDataToRackBasicInfo(string name, string type, string subtype, string capacity, string hsmsip, string hsmsport, string hsmsdevice, string createuser, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InsertERackDataToRackCurrentInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool InsertERackDataToRackCurrentInfo(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InsertStockerDataToRackCurrentInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool InsertStockerDataToRackCurrentInfo(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InsertERackDataToRackLocationStatus", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool InsertERackDataToRackLocationStatus(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/InsertStockerDataToRackLocationStatus", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool InsertStockerDataToRackLocationStatus(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/deleteERackDataFromRackBasicInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool deleteERackDataFromRackBasicInfo(string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/deleteERackDataFromRackCurrentInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool deleteERackDataFromRackCurrentInfo(string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/deleteERackDataFromRackLocationStatus", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool deleteERackDataFromRackLocationStatus(string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryAlarmRecord", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryAlarmRecord(string type, string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryFOUPCurrentRecord", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryFOUPCurrentRecord(string type, string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryFOUPHistoryRecord", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryFOUPHistoryRecord(string type, string name, string foupid, string beginTime, string endTime, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryTransferRecord", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryTransferRecord(string foupid, string beginTime, string endTime, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryBasicSetting", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryBasicSetting(ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryLocationList", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryLocationList(string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/updateLocationStatus", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool updateLocationStatus(string name, string location, string status, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/insertRoleSetting", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool insertRoleSetting(string roleid, string function, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/deleteRoleSetting", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool deleteRoleSetting(string roleid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/checkUserAuthority", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet checkUserAuthority(string id, string password, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getAllRoleID", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getAllRoleID(ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getUserBaseOnRole", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getUserBaseOnRole(string roleid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/insertUserSetting", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool insertUserSetting(string user, string roleid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/deleteUserSetting", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool deleteUserSetting(string username, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getAllUserID", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getAllUserID(ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/insertUserData", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool insertUserData(string name, string password, string mail, string creater, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/deleteUserData", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool deleteUserData(string name, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getUserInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getUserInfo(string username, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/updateUserInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool updateUserInfo(string password, string mail, string username, ref string errMessage);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getRelationofLocationandFOUPID", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getRelationofLocationandFOUPID(string equipmentid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/queryN2PurgeRecord", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet queryN2PurgeRecord(string foupid, string beginTime, string endTime, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getFunctionBaseOnUserName", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getFunctionBaseOnUserName(string userid, ref string strRersult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getTaskInformation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getTaskInformation(string tasktype, string taskcradle, string foupid, string taskstatus, string start_time, string end_time, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/updateBasicInformation", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        bool updateBasicInformation(string equipmentName, string fieldName, string newValue, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getSubtypeBaseOnEquipmentName", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getSubtypeBaseOnEquipmentName(string equipmentName, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getTypeBaseOnEquipmentName", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getTypeBaseOnEquipmentName(string equipmentName, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getLocationStatus", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getLocationStatus(string equipmentName, string locationid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/getFOUPInfo", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet getFOUPInfo(string equipmentName, string locationid, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/test", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        string test(string foupid, string beginTime, string endTime, ref string strResult);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/GetAllCurrentTask", ReplyAction = "*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults = true)]
        System.Data.DataSet GetAllCurrentTask(string start_time, string end_time, ref string strResult);
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MCSWebServiceSoapChannel : MCSUI.MCSWebServiceReference.MCSWebServiceSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MCSWebServiceSoapClient : System.ServiceModel.ClientBase<MCSUI.MCSWebServiceReference.MCSWebServiceSoap>, MCSUI.MCSWebServiceReference.MCSWebServiceSoap
    {

        public MCSWebServiceSoapClient()
        {
        }

        public MCSWebServiceSoapClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public MCSWebServiceSoapClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public MCSWebServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public MCSWebServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public string HelloWorld(string name)
        {
            return base.Channel.HelloWorld(name);
        }

        public System.Data.DataSet GetAllRackType(ref string strResult)
        {
            return base.Channel.GetAllRackType(ref strResult);
        }

        public System.Data.DataSet GetAllEqpID(string strEqpType, ref string strResult)
        {
            return base.Channel.GetAllEqpID(strEqpType, ref strResult);
        }

        public System.Data.DataSet CheckFoupExistOrNot(string strEqpType, string strEqpName, ref string strResult)
        {
            return base.Channel.CheckFoupExistOrNot(strEqpType, strEqpName, ref strResult);
        }

        public System.Data.DataSet QueryAllEquipmentBasicStatus(ref string strResult)
        {
            return base.Channel.QueryAllEquipmentBasicStatus(ref strResult);
        }

        public System.Data.DataSet QueryLocationBaseOnFOUPID(string equipmentid, string equipmenttype, string foupid, ref string strResult)
        {
            return base.Channel.QueryLocationBaseOnFOUPID(equipmentid, equipmenttype, foupid, ref strResult);
        }

        public System.Data.DataSet QueryLocationBaseOnFOUPIDWithoutEquipmentIDAndType(string foupid, ref string strResult)
        {
            return base.Channel.QueryLocationBaseOnFOUPIDWithoutEquipmentIDAndType(foupid, ref strResult);
        }

        public System.Data.DataSet QueryEquipmentBaseOnTypeAndSubtype(string type, string subtype, ref string strResult)
        {
            return base.Channel.QueryEquipmentBaseOnTypeAndSubtype(type, subtype, ref strResult);
        }

        public bool InsertERackDataToRackBasicInfo(string name, string type, string subtype, string capacity, string hsmsip, string hsmsport, string hsmsdevice, string createuser, ref string strResult)
        {
            return base.Channel.InsertERackDataToRackBasicInfo(name, type, subtype, capacity, hsmsip, hsmsport, hsmsdevice, createuser, ref strResult);
        }

        public bool InsertStockerDataToRackBasicInfo(string name, string type, string subtype, string capacity, string hsmsip, string hsmsport, string hsmsdevice, string createuser, ref string strResult)
        {
            return base.Channel.InsertStockerDataToRackBasicInfo(name, type, subtype, capacity, hsmsip, hsmsport, hsmsdevice, createuser, ref strResult);
        }

        public bool InsertERackDataToRackCurrentInfo(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult)
        {
            return base.Channel.InsertERackDataToRackCurrentInfo(name, type, subtype, directionCount, rowCount, colCount, ref strResult);
        }

        public bool InsertStockerDataToRackCurrentInfo(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult)
        {
            return base.Channel.InsertStockerDataToRackCurrentInfo(name, type, subtype, directionCount, rowCount, colCount, ref strResult);
        }

        public bool InsertERackDataToRackLocationStatus(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult)
        {
            return base.Channel.InsertERackDataToRackLocationStatus(name, type, subtype, directionCount, rowCount, colCount, ref strResult);
        }

        public bool InsertStockerDataToRackLocationStatus(string name, string type, string subtype, int directionCount, int rowCount, int colCount, ref string strResult)
        {
            return base.Channel.InsertStockerDataToRackLocationStatus(name, type, subtype, directionCount, rowCount, colCount, ref strResult);
        }

        public bool deleteERackDataFromRackBasicInfo(string name, ref string strResult)
        {
            return base.Channel.deleteERackDataFromRackBasicInfo(name, ref strResult);
        }

        public bool deleteERackDataFromRackCurrentInfo(string name, ref string strResult)
        {
            return base.Channel.deleteERackDataFromRackCurrentInfo(name, ref strResult);
        }

        public bool deleteERackDataFromRackLocationStatus(string name, ref string strResult)
        {
            return base.Channel.deleteERackDataFromRackLocationStatus(name, ref strResult);
        }

        public System.Data.DataSet queryAlarmRecord(string type, string name, ref string strResult)
        {
            return base.Channel.queryAlarmRecord(type, name, ref strResult);
        }

        public System.Data.DataSet queryFOUPCurrentRecord(string type, string name, ref string strResult)
        {
            return base.Channel.queryFOUPCurrentRecord(type, name, ref strResult);
        }

        public System.Data.DataSet queryFOUPHistoryRecord(string type, string name, string foupid, string beginTime, string endTime, ref string strResult)
        {
            return base.Channel.queryFOUPHistoryRecord(type, name, foupid, beginTime, endTime, ref strResult);
        }

        public System.Data.DataSet queryTransferRecord(string foupid, string beginTime, string endTime, ref string strResult)
        {
            return base.Channel.queryTransferRecord(foupid, beginTime, endTime, ref strResult);
        }

        public System.Data.DataSet queryBasicSetting(ref string strResult)
        {
            return base.Channel.queryBasicSetting(ref strResult);
        }

        public System.Data.DataSet queryLocationList(string name, ref string strResult)
        {
            return base.Channel.queryLocationList(name, ref strResult);
        }

        public bool updateLocationStatus(string name, string location, string status, ref string strResult)
        {
            return base.Channel.updateLocationStatus(name, location, status, ref strResult);
        }

        public bool insertRoleSetting(string roleid, string function, ref string strResult)
        {
            return base.Channel.insertRoleSetting(roleid, function, ref strResult);
        }

        public bool deleteRoleSetting(string roleid, ref string strResult)
        {
            return base.Channel.deleteRoleSetting(roleid, ref strResult);
        }

        public System.Data.DataSet checkUserAuthority(string id, string password, ref string strResult)
        {
            return base.Channel.checkUserAuthority(id, password, ref strResult);
        }

        public System.Data.DataSet getAllRoleID(ref string strResult)
        {
            return base.Channel.getAllRoleID(ref strResult);
        }

        public System.Data.DataSet getUserBaseOnRole(string roleid, ref string strResult)
        {
            return base.Channel.getUserBaseOnRole(roleid, ref strResult);
        }

        public bool insertUserSetting(string user, string roleid, ref string strResult)
        {
            return base.Channel.insertUserSetting(user, roleid, ref strResult);
        }

        public bool deleteUserSetting(string username, ref string strResult)
        {
            return base.Channel.deleteUserSetting(username, ref strResult);
        }

        public System.Data.DataSet getAllUserID(ref string strResult)
        {
            return base.Channel.getAllUserID(ref strResult);
        }

        public bool insertUserData(string name, string password, string mail, string creater, ref string strResult)
        {
            return base.Channel.insertUserData(name, password, mail, creater, ref strResult);
        }

        public bool deleteUserData(string name, ref string strResult)
        {
            return base.Channel.deleteUserData(name, ref strResult);
        }

        public System.Data.DataSet getUserInfo(string username, ref string strResult)
        {
            return base.Channel.getUserInfo(username, ref strResult);
        }

        public bool updateUserInfo(string password, string mail, string username, ref string errMessage)
        {
            return base.Channel.updateUserInfo(password, mail, username, ref errMessage);
        }

        public System.Data.DataSet getRelationofLocationandFOUPID(string equipmentid, ref string strResult)
        {
            return base.Channel.getRelationofLocationandFOUPID(equipmentid, ref strResult);
        }

        public System.Data.DataSet queryN2PurgeRecord(string foupid, string beginTime, string endTime, ref string strResult)
        {
            return base.Channel.queryN2PurgeRecord(foupid, beginTime, endTime, ref strResult);
        }

        public System.Data.DataSet getFunctionBaseOnUserName(string userid, ref string strRersult)
        {
            return base.Channel.getFunctionBaseOnUserName(userid, ref strRersult);
        }

        public System.Data.DataSet getTaskInformation(string tasktype, string taskcradle, string foupid, string taskstatus, string start_time, string end_time, ref string strResult)
        {
            return base.Channel.getTaskInformation(tasktype, taskcradle, foupid, taskstatus, start_time, end_time, ref strResult);
        }

        public bool updateBasicInformation(string equipmentName, string fieldName, string newValue, ref string strResult)
        {
            return base.Channel.updateBasicInformation(equipmentName, fieldName, newValue, ref strResult);
        }

        public System.Data.DataSet getSubtypeBaseOnEquipmentName(string equipmentName, ref string strResult)
        {
            return base.Channel.getSubtypeBaseOnEquipmentName(equipmentName, ref strResult);
        }

        public System.Data.DataSet getTypeBaseOnEquipmentName(string equipmentName, ref string strResult)
        {
            return base.Channel.getTypeBaseOnEquipmentName(equipmentName, ref strResult);
        }

        public System.Data.DataSet getLocationStatus(string equipmentName, string locationid, ref string strResult)
        {
            return base.Channel.getLocationStatus(equipmentName, locationid, ref strResult);
        }

        public System.Data.DataSet getFOUPInfo(string equipmentName, string locationid, ref string strResult)
        {
            return base.Channel.getFOUPInfo(equipmentName, locationid, ref strResult);
        }

        public string test(string foupid, string beginTime, string endTime, ref string strResult)
        {
            return base.Channel.test(foupid, beginTime, endTime, ref strResult);
        }

        public System.Data.DataSet GetAllCurrentTask(string start_time, string end_time, ref string strResult)
        {
            return base.Channel.GetAllCurrentTask(start_time, end_time, ref strResult);
        }
    }
}
